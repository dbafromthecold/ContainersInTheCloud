# check azure-cli is installed
az --version



# log in to azure
az login



# create a resource group
az group create --name containers1 --location eastus



# create registry
az acr create --resource-group containers1 --name apregistry --sku Basic



# log into registry
az acr login --name apregistry



# find fully qualified name of registry login server
az acr list --resource-group containers1 --query "[].{acrLoginServer:loginServer}" --output table



# list local docker images
docker images



# build custom image
docker build -t testimage /home/dbafromthecold/git/ContainersInTheCloud/Code



# tag local image with ACR name
docker tag testimage apregistry.azurecr.io/devsqlimage:latest
docker tag testimage apregistry.azurecr.io/devsqlimage:v1
docker tag testimage apregistry.azurecr.io/devsqlimage:v2
docker tag testimage apregistry.azurecr.io/devsqlimage:v3



# push image to registry
docker push apregistry.azurecr.io/devsqlimage:latest
docker push apregistry.azurecr.io/devsqlimage:v1
docker push apregistry.azurecr.io/devsqlimage:v2
docker push apregistry.azurecr.io/devsqlimage:v3



# list repositories in registry
az acr repository list --name apregistry --output table



# show tags in repository
az acr repository show-tags --name apregistry --repository devsqlimage



# pull out a bit more information about images
az acr repository show-manifests --name apregistry --repository devsqlimage



# remove image from the registry
az acr repository delete --name apregistry --repository devsqlimage