# check azure-cli is installed
az --version



# log in to azure
az login



# get credentials to connect to cluster
az aks get-credentials --resource-group containers1 --name SQLK8sCluster



# confirm connection to cluster by viewing nodes
kubectl get nodes



# Get client ID
az aks show --resource-group containers1 --name SQLK8sCluster --query "servicePrincipalProfile.clientId" --output tsv



# Get ACR ID
az acr show --name apregistry --resource-group containers1 --query "id" --output tsv



# Create role to allow deployments
az role assignment create --assignee <<CLIENTID>> --role Reader --scope <<ACRID>>



# set location to .yml file
cd /home/dbafromthecold/git/ContainersInTheCloud/Demos



# deploy to cluster
kubectl apply -f sqlserver2.yaml



# view deployment
kubectl get deployments



# view pods
kubectl get pods -o wide



# get more info
kubectl describe pods



# view service
kubectl get service



# remote into container
kubectl get pods -o wide
kubectl exec -it podname bash



# navigate to directory in pod
cd /var/opt/sqlserver
ls
exit



# view dashboard
az aks browse --resource-group containers1 --name SQLK8sCluster1



# get pods
kubectl get pods



# delete pod
kubectl delete pod podname



# get pods
kubectl get pods



# delete deployment & service
kubectl delete deployment sqlserver2
kubectl delete service sqlserver2-service



# confirm
kubectl get deployments
kubectl get pods
kubectl get service
